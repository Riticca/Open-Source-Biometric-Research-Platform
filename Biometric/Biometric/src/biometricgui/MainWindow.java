/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package biometricgui;

import java.awt.*;
import java.awt.Color;
import java.io.File;
import java.nio.file.Files;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JFileChooser;

public class MainWindow extends javax.swing.JFrame {

    /**
     * Creates new form BiometricUI
     */
    public MainWindow() {

        /* Hash map contains panels and filepaths */
        fileToOpen = new HashMap<>();

        /* Count for videos to be load */
        videoPlotterCount = 0;

        /* Count for graphs to be load */
        graphCount = 0;

        /* Initialization for video plotters (maximum 2) */
        videoPlotters = new VideoPlotter[2];

        /* Initialization for graph plotters (maximum 4) */
        graphThreads = new Thread[4];

        /* Data to be synchronized between threads */
        sharedData = SharedData.getSharedDataInstance();
        
        /* Initialization of window components */
        initComponents();
        
        /* Hashmap for panels and signals */
        panelSignalMap = new HashMap<javax.swing.JPanel, javax.swing.JCheckBox[]>()
        {{
            put(jPanelEEG, new javax.swing.JCheckBox[]{s1EEG, s2EEG, s3EEG, s4EEG});
            put(jPanelEMG, new javax.swing.JCheckBox[]{s1EMG, s2EMG, s3EMG, s4EMG});
            put(jPanelECG, new javax.swing.JCheckBox[]{s1ECG, s2ECG, s3ECG, s4ECG});
            put(jPanelGSR, new javax.swing.JCheckBox[]{s1GSR, s2GSR, s3GSR, s4GSR});
        }};

        jButtonStop.setEnabled(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        buttonGroup2 = new javax.swing.ButtonGroup();
        slider = new javax.swing.JSlider();
        jPanelMessages = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaDisplayMessages = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jPanelEyeTracking = new javax.swing.JPanel();
        jLabelEyeTracking = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jRadioButtonLive = new javax.swing.JRadioButton();
        jRadioButtonBrowseComputer = new javax.swing.JRadioButton();
        jButtonEyeTracking = new javax.swing.JButton();
        jButtonUserVideo = new javax.swing.JButton();
        jButtonEEG = new javax.swing.JButton();
        jButtonECG = new javax.swing.JButton();
        jButtonEMG = new javax.swing.JButton();
        jButtonGSR = new javax.swing.JButton();
        jButtonEyeTrackingData = new javax.swing.JButton();
        jPanelUserVideo = new javax.swing.JPanel();
        jLabelUserVideo = new javax.swing.JLabel();
        jPanelECG = new javax.swing.JPanel();
        jPanelGSR = new javax.swing.JPanel();
        jPanelEEG = new javax.swing.JPanel();
        jPanelEMG = new javax.swing.JPanel();
        s1EEG = new javax.swing.JCheckBox();
        s2EEG = new javax.swing.JCheckBox();
        s3EEG = new javax.swing.JCheckBox();
        s4EEG = new javax.swing.JCheckBox();
        s1ECG = new javax.swing.JCheckBox();
        s2ECG = new javax.swing.JCheckBox();
        s3ECG = new javax.swing.JCheckBox();
        s4ECG = new javax.swing.JCheckBox();
        s1GSR = new javax.swing.JCheckBox();
        s2GSR = new javax.swing.JCheckBox();
        s3GSR = new javax.swing.JCheckBox();
        s4GSR = new javax.swing.JCheckBox();
        s1EMG = new javax.swing.JCheckBox();
        s2EMG = new javax.swing.JCheckBox();
        s3EMG = new javax.swing.JCheckBox();
        s4EMG = new javax.swing.JCheckBox();
        jButtonStop = new javax.swing.JButton();
        jButtonStart = new javax.swing.JButton();

        jFileChooser1.setDialogTitle("This is my open dialog");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Opensource Biometric Research Platform");
        setBackground(new java.awt.Color(255, 204, 204));
        setBounds(new java.awt.Rectangle(0, 0, 500, 500));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMaximumSize(new java.awt.Dimension(700, 700));
        setPreferredSize(new java.awt.Dimension(1390, 900));
        setResizable(false);

        slider.setMinorTickSpacing(1);
        slider.setPaintTicks(true);
        slider.setSnapToTicks(true);
        slider.setToolTipText("");
        slider.setValue(0);
        slider.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        slider.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        slider.setPreferredSize(new java.awt.Dimension(200, 40));
        slider.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                sliderMouseDragged(evt);
            }
        });

        jPanelMessages.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextAreaDisplayMessages.setColumns(20);
        jTextAreaDisplayMessages.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jTextAreaDisplayMessages.setLineWrap(true);
        jTextAreaDisplayMessages.setRows(5);
        jTextAreaDisplayMessages.setWrapStyleWord(true);
        jScrollPane1.setViewportView(jTextAreaDisplayMessages);

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setForeground(new java.awt.Color(255, 51, 51));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Messages");

        javax.swing.GroupLayout jPanelMessagesLayout = new javax.swing.GroupLayout(jPanelMessages);
        jPanelMessages.setLayout(jPanelMessagesLayout);
        jPanelMessagesLayout.setHorizontalGroup(
            jPanelMessagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMessagesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelMessagesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanelMessagesLayout.setVerticalGroup(
            jPanelMessagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMessagesLayout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                .addGap(48, 48, 48))
        );

        jPanelEyeTracking.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelEyeTracking.setName("jPanelEyeTracking"); // NOI18N
        jPanelEyeTracking.setPreferredSize(new java.awt.Dimension(65, 14));

        jLabelEyeTracking.setText("Eye Tracking");
        jLabelEyeTracking.setAlignmentX(0.5F);
        jLabelEyeTracking.setMaximumSize(new java.awt.Dimension(3267, 3267));
        jLabelEyeTracking.setMinimumSize(new java.awt.Dimension(0, 0));

        javax.swing.GroupLayout jPanelEyeTrackingLayout = new javax.swing.GroupLayout(jPanelEyeTracking);
        jPanelEyeTracking.setLayout(jPanelEyeTrackingLayout);
        jPanelEyeTrackingLayout.setHorizontalGroup(
            jPanelEyeTrackingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEyeTrackingLayout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addComponent(jLabelEyeTracking, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(306, Short.MAX_VALUE))
        );
        jPanelEyeTrackingLayout.setVerticalGroup(
            jPanelEyeTrackingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEyeTrackingLayout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addComponent(jLabelEyeTracking, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                .addGap(77, 77, 77))
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        buttonGroup2.add(jRadioButtonLive);
        jRadioButtonLive.setText("Live");
        jRadioButtonLive.setActionCommand("Load Live");
        jRadioButtonLive.setEnabled(false);
        jRadioButtonLive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonLiveActionPerformed(evt);
            }
        });

        buttonGroup2.add(jRadioButtonBrowseComputer);
        jRadioButtonBrowseComputer.setText("Browse Computer");
        jRadioButtonBrowseComputer.setToolTipText("Click to brose file from your system");
        jRadioButtonBrowseComputer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonBrowseComputerActionPerformed(evt);
            }
        });

        jButtonEyeTracking.setText("Eye Tracking");
        jButtonEyeTracking.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonEyeTrackingMouseClicked(evt);
            }
        });

        jButtonUserVideo.setText("User Video");
        jButtonUserVideo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonUserVideoMouseClicked(evt);
            }
        });

        jButtonEEG.setText("EEG");
        jButtonEEG.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonEEGMouseClicked(evt);
            }
        });

        jButtonECG.setText("ECG");
        jButtonECG.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonECGMouseClicked(evt);
            }
        });

        jButtonEMG.setText("EMG");
        jButtonEMG.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonEMGMouseClicked(evt);
            }
        });

        jButtonGSR.setText("GSR");
        jButtonGSR.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonGSRMouseClicked(evt);
            }
        });

        jButtonEyeTrackingData.setLabel(" Eye Tracking Data");
        jButtonEyeTrackingData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonEyeTrackingDataMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jRadioButtonBrowseComputer, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jRadioButtonLive, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jButtonEMG, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonGSR, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.CENTER, jPanel8Layout.createSequentialGroup()
                                .addComponent(jButtonEEG, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonECG, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.CENTER, jPanel8Layout.createSequentialGroup()
                                .addComponent(jButtonEyeTracking, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonUserVideo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(12, 12, 12))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addComponent(jButtonEyeTrackingData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(125, 125, 125))))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jRadioButtonBrowseComputer, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButtonLive, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonEyeTrackingData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(14, 14, 14)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonEyeTracking, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonUserVideo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonEEG, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonECG, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(10, 10, 10)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonEMG, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonGSR, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanelUserVideo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelUserVideo.setName("jPanelUserVideo"); // NOI18N
        jPanelUserVideo.setPreferredSize(new java.awt.Dimension(61, 14));

        jLabelUserVideo.setText("User Video");

        javax.swing.GroupLayout jPanelUserVideoLayout = new javax.swing.GroupLayout(jPanelUserVideo);
        jPanelUserVideo.setLayout(jPanelUserVideoLayout);
        jPanelUserVideoLayout.setHorizontalGroup(
            jPanelUserVideoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelUserVideoLayout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addComponent(jLabelUserVideo, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(183, Short.MAX_VALUE))
        );
        jPanelUserVideoLayout.setVerticalGroup(
            jPanelUserVideoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelUserVideoLayout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addComponent(jLabelUserVideo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(77, 77, 77))
        );

        jPanelECG.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelECG.setName("ECG Graph"); // NOI18N
        jPanelECG.setPreferredSize(new java.awt.Dimension(452, 187));

        javax.swing.GroupLayout jPanelECGLayout = new javax.swing.GroupLayout(jPanelECG);
        jPanelECG.setLayout(jPanelECGLayout);
        jPanelECGLayout.setHorizontalGroup(
            jPanelECGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 450, Short.MAX_VALUE)
        );
        jPanelECGLayout.setVerticalGroup(
            jPanelECGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 185, Short.MAX_VALUE)
        );

        jPanelGSR.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelGSR.setName("GSR Graph"); // NOI18N
        jPanelGSR.setPreferredSize(new java.awt.Dimension(452, 187));

        javax.swing.GroupLayout jPanelGSRLayout = new javax.swing.GroupLayout(jPanelGSR);
        jPanelGSR.setLayout(jPanelGSRLayout);
        jPanelGSRLayout.setHorizontalGroup(
            jPanelGSRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 450, Short.MAX_VALUE)
        );
        jPanelGSRLayout.setVerticalGroup(
            jPanelGSRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 173, Short.MAX_VALUE)
        );

        jPanelEEG.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelEEG.setAlignmentX(0.0F);
        jPanelEEG.setAlignmentY(0.0F);
        jPanelEEG.setName("EEG Graph"); // NOI18N
        jPanelEEG.setPreferredSize(new java.awt.Dimension(452, 187));

        javax.swing.GroupLayout jPanelEEGLayout = new javax.swing.GroupLayout(jPanelEEG);
        jPanelEEG.setLayout(jPanelEEGLayout);
        jPanelEEGLayout.setHorizontalGroup(
            jPanelEEGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 471, Short.MAX_VALUE)
        );
        jPanelEEGLayout.setVerticalGroup(
            jPanelEEGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 185, Short.MAX_VALUE)
        );

        jPanelEMG.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelEMG.setName("EMG Graph"); // NOI18N
        jPanelEMG.setPreferredSize(new java.awt.Dimension(452, 187));

        javax.swing.GroupLayout jPanelEMGLayout = new javax.swing.GroupLayout(jPanelEMG);
        jPanelEMG.setLayout(jPanelEMGLayout);
        jPanelEMGLayout.setHorizontalGroup(
            jPanelEMGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanelEMGLayout.setVerticalGroup(
            jPanelEMGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 173, Short.MAX_VALUE)
        );

        s1EEG.setText("S1");
        s1EEG.setActionCommand("EEGS1");

        s2EEG.setText("S2");
        s2EEG.setToolTipText("");
        s2EEG.setActionCommand("EEGS2");

        s3EEG.setText("S3");
        s3EEG.setToolTipText("");
        s3EEG.setActionCommand("EEGS3");

        s4EEG.setText("S4");
        s4EEG.setToolTipText("");
        s4EEG.setActionCommand("EEGS4");
        s4EEG.setVerifyInputWhenFocusTarget(false);

        s1ECG.setText("S1");
        s1ECG.setActionCommand("ECGS1");

        s2ECG.setText("S2");
        s2ECG.setToolTipText("");
        s2ECG.setActionCommand("EEGS2");

        s3ECG.setText("S3");
        s3ECG.setToolTipText("");
        s3ECG.setActionCommand("EEGS3");

        s4ECG.setText("S4");
        s4ECG.setToolTipText("");
        s4ECG.setActionCommand("EEGS4");
        s4ECG.setVerifyInputWhenFocusTarget(false);

        s1GSR.setText("S1");
        s1GSR.setActionCommand("EEGS1");

        s2GSR.setText("S2");
        s2GSR.setToolTipText("");
        s2GSR.setActionCommand("EEGS2");

        s3GSR.setText("S3");
        s3GSR.setToolTipText("");
        s3GSR.setActionCommand("EEGS3");

        s4GSR.setText("S4");
        s4GSR.setToolTipText("");
        s4GSR.setActionCommand("EEGS4");
        s4GSR.setVerifyInputWhenFocusTarget(false);

        s1EMG.setText("S1");
        s1EMG.setActionCommand("EEGS1");

        s2EMG.setText("S2");
        s2EMG.setToolTipText("");
        s2EMG.setActionCommand("EEGS2");

        s3EMG.setText("S3");
        s3EMG.setToolTipText("");
        s3EMG.setActionCommand("EEGS3");

        s4EMG.setText("S4");
        s4EMG.setToolTipText("");
        s4EMG.setActionCommand("EEGS4");
        s4EMG.setVerifyInputWhenFocusTarget(false);

        jButtonStop.setText("Stop");
        jButtonStop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonStopMouseClicked(evt);
            }
        });

        jButtonStart.setText("Start");
        jButtonStart.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonStartMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(slider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(s1EMG)
                                    .addComponent(s2EMG)
                                    .addComponent(s3EMG)
                                    .addComponent(s4EMG)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(s3EEG, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(s2EEG, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(s1EEG)
                                    .addComponent(s4EEG))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanelEyeTracking, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                                .addComponent(jPanelUserVideo, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(11, 11, 11))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jPanelEEG, javax.swing.GroupLayout.DEFAULT_SIZE, 473, Short.MAX_VALUE)
                                    .addComponent(jPanelEMG, javax.swing.GroupLayout.DEFAULT_SIZE, 473, Short.MAX_VALUE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(7, 7, 7)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(s1ECG)
                                            .addComponent(s2ECG)
                                            .addComponent(s3ECG)
                                            .addComponent(s4ECG))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jPanelECG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(5, 5, 5)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(s1GSR)
                                            .addComponent(s2GSR)
                                            .addComponent(s3GSR)
                                            .addComponent(s4GSR))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jPanelGSR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jButtonStart)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonStop))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jPanelMessages, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(37, 37, 37))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanelEyeTracking, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE)
                            .addComponent(jPanelUserVideo, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPanelECG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jPanelEEG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(43, 43, 43))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(s1ECG)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(s2ECG)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(s3ECG)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(s4ECG)
                                        .addGap(110, 110, 110))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(s1EEG)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(s2EEG)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(s3EEG)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(s4EEG)
                                        .addGap(109, 109, 109)))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanelEMG, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanelGSR, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(s1GSR)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(s2GSR)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(s3GSR)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(s4GSR))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(s1EMG)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(s2EMG)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(s3EMG)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(s4EMG)))
                        .addGap(18, 18, 18)
                        .addComponent(slider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonStop)
                            .addComponent(jButtonStart))
                        .addGap(39, 39, 39)
                        .addComponent(jPanelMessages, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(173, Short.MAX_VALUE))
        );

        s1EEG.getAccessibleContext().setAccessibleName("EEGS1");
        s2EEG.getAccessibleContext().setAccessibleName("EEGS2");
        s3EEG.getAccessibleContext().setAccessibleName("EEGS3");
        s4EEG.getAccessibleContext().setAccessibleName("EEGS4");
        s1ECG.getAccessibleContext().setAccessibleName("ECGS1");
        s2ECG.getAccessibleContext().setAccessibleName("ECGS2");
        s3ECG.getAccessibleContext().setAccessibleName("ECGS3");
        s4ECG.getAccessibleContext().setAccessibleName("ECGS4");
        s1GSR.getAccessibleContext().setAccessibleName("GSRS1");
        s2GSR.getAccessibleContext().setAccessibleName("GSRS2");
        s3GSR.getAccessibleContext().setAccessibleName("GSRS3");
        s4GSR.getAccessibleContext().setAccessibleName("GSRS4");
        s1EMG.getAccessibleContext().setAccessibleName("EMGS1");
        s2EMG.getAccessibleContext().setAccessibleName("EMGS2");
        s3EMG.getAccessibleContext().setAccessibleName("EMGS3");
        s4EMG.getAccessibleContext().setAccessibleName("EMGS4");
        jButtonStop.getAccessibleContext().setAccessibleName("jButtonStop");
        jButtonStart.getAccessibleContext().setAccessibleName("jButtonStart");

        getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButtonLiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonLiveActionPerformed
        browseComputer = false;
    }//GEN-LAST:event_jRadioButtonLiveActionPerformed

    private void jRadioButtonBrowseComputerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonBrowseComputerActionPerformed
        browseComputer = true;
    }//GEN-LAST:event_jRadioButtonBrowseComputerActionPerformed

    private void chooseFile(javax.swing.JPanel panelName) {

        /* Get input file from user */
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.showOpenDialog(null);
        String filename;

        try {
            File fileRef = fileChooser.getSelectedFile();
            filename = fileRef.getName();

            if (panelName != null) {
                if ( panelName == jPanelEyeTracking )
                    if ( "mp4".equals(filename.substring(filename.lastIndexOf(".") + 1, 
                            filename.length())) )
                        jTextAreaDisplayMessages.append(fileRef.getName() + 
                            " File is selected for Eye Tracking video" + "\n");
                    else {
                        jTextAreaDisplayMessages.append(
                            "Wrong file selected for eye tracking video; File format should be mp4\n");
                        return;
                    }
                else if ( panelName == jPanelUserVideo )
                        if ( "mp4".equals(filename.substring(filename.lastIndexOf(".") + 1, 
                                filename.length())) )
                            jTextAreaDisplayMessages.append(fileRef.getName() + 
                              " File is selected for User video" + "\n");
                        else {
                            jTextAreaDisplayMessages.append(
                                "Wrong file selected for user video; File format should be mp4\n");
                            return;
                        }
                else {
                    if ( "csv".equals(filename.substring(filename.lastIndexOf(".") + 1, 
                            filename.length())) )
                        jTextAreaDisplayMessages.append(fileRef.getName() + 
                            " File is selected for " + 
                            panelName.getName().substring(0, 3) + "\n");
                    else {
                        jTextAreaDisplayMessages.append(
                           "Wrong file selected for Biometric Data; File format should be csv\n");
                        return;
                    }
                }
                fileToOpen.put(panelName, fileRef.getAbsolutePath());
            
            } else {
                if ( "csv".equals(filename.substring(filename.lastIndexOf(".") + 1, 
                        filename.length())) ) {
                    eyeTrackingDataPath = fileRef.getAbsolutePath();
                    jTextAreaDisplayMessages.append(fileRef.getName() + 
                        " File is selected for Eye Tracking Data" + "\n");
                } else {
                    jTextAreaDisplayMessages.append(
                       "Wrong file selected for Eye Tracking; File format should be csv\n");
                }
            }
            
        } catch (NullPointerException e) {
            System.out.println("Null pointer exception");
        }
    }

    private void jButtonEyeTrackingMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonEyeTrackingMouseClicked
        if (browseComputer == true) {
            chooseFile(jPanelEyeTracking);
        }
    }//GEN-LAST:event_jButtonEyeTrackingMouseClicked

    private void jButtonUserVideoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonUserVideoMouseClicked
        if (browseComputer == true) {
            chooseFile(jPanelUserVideo);
        }
    }//GEN-LAST:event_jButtonUserVideoMouseClicked

    private void jButtonEyeTrackingDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonEyeTrackingDataMouseClicked
        if (browseComputer ) {
            chooseFile(null);
        }
    }//GEN-LAST:event_jButtonEyeTrackingDataMouseClicked

    private void sliderMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sliderMouseDragged
        /* Change the current time of video according to slider */
        sharedData.set(slider.getValue());
        for (int i = 0; i < videoPlotterCount; i++) {
            videoPlotters[i].setMediaValue(slider.getValue());
        }
    }//GEN-LAST:event_sliderMouseDragged

    private void jButtonECGMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonECGMouseClicked
        /* Get ECG file from user */
        if (browseComputer) {
            chooseFile(jPanelECG);
        }
    }//GEN-LAST:event_jButtonECGMouseClicked

    private void jButtonEEGMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonEEGMouseClicked
        /* Get EEG file from user */
        if (browseComputer) {
            chooseFile(jPanelEEG);
        }
    }//GEN-LAST:event_jButtonEEGMouseClicked

    private void jButtonGSRMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonGSRMouseClicked

        /* Get GSR file from user */
        if (browseComputer) {
            chooseFile(jPanelGSR);
        }
    }//GEN-LAST:event_jButtonGSRMouseClicked

    private void jButtonEMGMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonEMGMouseClicked

        /* Get EMG file from user */
        if (browseComputer) {
            chooseFile(jPanelEMG);
        }
    }//GEN-LAST:event_jButtonEMGMouseClicked

    private void jButtonStopMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonStopMouseClicked
                   /* Stop all videos */
            for (int i = 0; i < videoPlotterCount; i++) {
                videoPlotters[i].stopVideo();
            }
            sharedData.stopEverything();
            sharedData.setSliderStatus(false);

            videoPlotterCount = 0;
            graphCount = 0;

            videoPlotters = new VideoPlotter[2];
            graphThreads = new Thread[4];
            fileToOpen = new HashMap<>();

            System.gc();

            /* Change the color of button */
            jButtonStart.setText("Start");
            jButtonStop.setEnabled(false);
            jTextAreaDisplayMessages.append("Application has now stopped\n");
    }//GEN-LAST:event_jButtonStopMouseClicked

    private void jButtonStartMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonStartMouseClicked
        
        switch (jButtonStart.getText()) {
            
            case "Start":
                
                /* Process all entries from map */
                for (Map.Entry<javax.swing.JPanel, String> entry : fileToOpen.entrySet()) {

                    javax.swing.JPanel panelSelected = entry.getKey();
                    String localFilePath = entry.getValue();

                    /* Processing for videos */
                    if ((panelSelected.getName().equals("jPanelEyeTracking"))
                            || (panelSelected.getName().equals("jPanelUserVideo"))) {

                        /* Hide the label on video */
                        if ( panelSelected.getComponentCount() > 0 ) {
                            javax.swing.JLabel lab = (javax.swing.JLabel) panelSelected.getComponent(0);
                            lab.setVisible(false);
                        }

                        /* Create and start threads for video */
                        if (panelSelected.getName().equals("jPanelEyeTracking"))
                            videoPlotters[videoPlotterCount] = new VideoPlotter(panelSelected, localFilePath, eyeTrackingDataPath, this);
                        else
                            videoPlotters[videoPlotterCount] = new VideoPlotter(panelSelected, localFilePath, null, this);
                        Thread thread = new Thread(videoPlotters[videoPlotterCount]);
                        thread.start();
                        videoPlotterCount++;
                        
                    } else {
                        
                        /* Processing for Graphs */
                        javax.swing.JCheckBox[] signals = panelSignalMap.get(panelSelected);
                        GraphPlotter newGraph;
                        newGraph = new GraphPlotter(panelSelected, localFilePath,
                                                    signals[0].isSelected(),
                                                    signals[1].isSelected(),
                                                    signals[2].isSelected(),
                                                    signals[3].isSelected());
                        graphThreads[graphCount] = new Thread(newGraph);
                        graphThreads[graphCount].start();
                        graphCount++;
                        
                    }
                }
                
                /* Create thread for slider and set its status to true */
                sharedData.setSliderStatus(true);
                sharedData.startEverything();
                Slider firstThread = new Slider(slider);
                Thread thread = new Thread(firstThread);
                thread.start();

                /* Change Start button label to Pause */
                jButtonStart.setText("Pause");

                jButtonStop.setEnabled(true);
                jTextAreaDisplayMessages.append("Application is started\n");
                break;
                
            case "Pause":

                /* Pause all running videos */
                for (int i = 0; i < videoPlotterCount; i++) {
                    videoPlotters[i].pauseVideo();
                }

                /* Disable slider */
                sharedData.setSliderStatus(false);

                /* Change Pause button label to Resume */
                jButtonStart.setText("Resume");
                
                jTextAreaDisplayMessages.append("Application is paused\n");
                break;
                
            case "Resume":

                /* Resume all videos */
                for (int i = 0; i < videoPlotterCount; i++) {
                    videoPlotters[i].resumeVideo();
                }

                /* Change Resume button label to Pause */
                jButtonStart.setText("Pause");

                /* Enable slider */
                sharedData.setSliderStatus(true);

                jTextAreaDisplayMessages.append("Application resumed\n");
                break;

            default:
                break;
        }

    }//GEN-LAST:event_jButtonStartMouseClicked
    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MainWindow().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton jButtonECG;
    private javax.swing.JButton jButtonEEG;
    private javax.swing.JButton jButtonEMG;
    private javax.swing.JButton jButtonEyeTracking;
    private javax.swing.JButton jButtonEyeTrackingData;
    private javax.swing.JButton jButtonGSR;
    private javax.swing.JButton jButtonStart;
    private javax.swing.JButton jButtonStop;
    private javax.swing.JButton jButtonUserVideo;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelEyeTracking;
    private javax.swing.JLabel jLabelUserVideo;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanelECG;
    private javax.swing.JPanel jPanelEEG;
    private javax.swing.JPanel jPanelEMG;
    private javax.swing.JPanel jPanelEyeTracking;
    private javax.swing.JPanel jPanelGSR;
    private javax.swing.JPanel jPanelMessages;
    private javax.swing.JPanel jPanelUserVideo;
    private javax.swing.JRadioButton jRadioButtonBrowseComputer;
    private javax.swing.JRadioButton jRadioButtonLive;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaDisplayMessages;
    private javax.swing.JCheckBox s1ECG;
    private javax.swing.JCheckBox s1EEG;
    private javax.swing.JCheckBox s1EMG;
    private javax.swing.JCheckBox s1GSR;
    private javax.swing.JCheckBox s2ECG;
    private javax.swing.JCheckBox s2EEG;
    private javax.swing.JCheckBox s2EMG;
    private javax.swing.JCheckBox s2GSR;
    private javax.swing.JCheckBox s3ECG;
    private javax.swing.JCheckBox s3EEG;
    private javax.swing.JCheckBox s3EMG;
    private javax.swing.JCheckBox s3GSR;
    private javax.swing.JCheckBox s4ECG;
    private javax.swing.JCheckBox s4EEG;
    private javax.swing.JCheckBox s4EMG;
    private javax.swing.JCheckBox s4GSR;
    private javax.swing.JSlider slider;
    // End of variables declaration//GEN-END:variables

    private Canvas canvas;
    private Map<javax.swing.JPanel, String> fileToOpen;
    private boolean browseComputer;
    private Thread graphThreads[];
    private int graphCount;
    private VideoPlotter videoPlotters[];
    private int videoPlotterCount;
    private SharedData sharedData;
    private String eyeTrackingDataPath;
    private Map<javax.swing.JPanel, javax.swing.JCheckBox[]> panelSignalMap;

}
